{"version":3,"file":"flowmaker.modern.js","sources":["../src/logic.js","../src/utils.js","../src/flowTree.js","../src/icons.js","../src/addbutton.js","../src/tooltip.js","../src/input.js","../src/block.js","../src/graphPart.js","../flowmaker.js"],"sourcesContent":["export default class Logic {\n  constructor() {\n    this.conf = {\n      components: {},\n      introComponents: [],\n    }\n    this.errors = []\n  }\n  title(compoentName) {\n    return this.conf.components[compoentName].title\n  }\n  get() {\n    return this.conf\n  }\n  parseNewLogic(input) {\n    const outErrs = []\n    const warn = (...data) => {\n      outErrs.push(data.join(' '))\n      console.log(\"logic parse warning:\", ...data)\n    }\n\n    let conf = {\n      components: {},\n      introComponents: [],\n    }\n\n    if (input.components) {\n      if (Array.isArray(input.components)) {\n        input.components.map((component, i) => {\n          if (!component.name || !component.title) {\n            warn(`logic.components[${i}] does not have a name or title field, this component will be ignored`)\n            return\n          }\n          \n          const alreadyUsedNames = []\n\n          let toInsert = {\n            name: component.name,\n            title: component.title,\n            next: component.next ? Array.isArray(component.next) ? component.next : [component.next] : [],\n            tooltip: component.tooltip,\n            inputs: [],\n            advancedInputs: [],\n          }\n\n          if (Array.isArray(component.inputs)) {\n            component.inputs.map((input, inputID) => {\n              if (!input.title || !input.name || !input.type) {\n                warn(`logic.components[${i}].inputs[${inputID}] does not have a name, type or title field, this input will be ignored`)\n                return\n              }\n\n              if (typeof input.validation != 'function' && typeof input.validation != 'undefined') {\n                warn(`logic.components[${i}].inputs[${inputID}].validation must be undefined or a function`)\n                return\n              }\n              \n              if (typeof input.tooltip != 'string' && input.tooltip !== undefined) {\n                warn(`logic.components[${i}].inputs[${inputID}].tooltip must be a string or not undefined`)\n                return\n              }\n\n              if (alreadyUsedNames.indexOf(input.name) != -1) {\n                warn(`logic.components[${i}].inputs[${inputID}].name can't be equal to other names`)\n                return\n              }\n\n              let toReturn = {\n                name: input.name,\n                title: input.title,\n                type: input.type,\n                validation: input.validation,\n                tooltip: input.tooltip,\n                default: input.default,\n              }\n\n              switch (input.type) {\n                case 'text':\n                  if (typeof input.default != 'string' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a string or undefined, using default empty string`)\n                    toReturn.default = ''\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = ''\n                  }\n                  break;\n                case 'number':\n                  if (typeof input.default != 'number' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a number or undefined, using default 0`)\n                    toReturn.default = 0\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = 0\n                  }\n                  break;\n                case 'switch':\n                  if (typeof input.default != 'boolean' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a boolean or undefined, using default empty string`)\n                    toReturn.default = false\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = false\n                  }\n                  break;\n                case 'dropdown':\n                  if (!Array.isArray(input.options)) {\n                    warn(`logic.components[${i}].inputs[${inputID}].options is not defined or is not an array, skipping this item`)\n                    return\n                  } else {\n                    toReturn['options'] = input.options.map((option, optionID) => {\n                      if (typeof option.title != 'string' || typeof option.value != 'string' || (typeof option.tooltip != 'string' && option.tooltip != undefined)) {\n                        warn(`logic.components[${i}].inputs[${inputID}].options[${optionID}] does not have the correct items (title string, value string, tooltip string), skipping this item`)\n                        return\n                      }\n                      return {\n                        title: option.title,\n                        tooltip: option.tooltip,\n                        value: option.value,\n                      }\n                    }).filter(item => item)\n                  }\n                  break;\n                default:\n                  warn(`logic.components[${i}].inputs[${inputID}].type = '${input.type}' is not valid, this input will be ignored`)\n                  return\n              }\n\n              alreadyUsedNames.push(input.name)\n              toInsert[input.advanced ? 'advancedInputs' : 'inputs'].push(toReturn)\n              return\n            })\n          }\n\n          conf.components[component.name] = toInsert\n        })\n        Object.keys(conf.components).map(key => {\n          conf.components[key].next = conf.components[key].next.filter(componentKey => {\n            if (conf.components[componentKey]) {\n              return true\n            }\n            warn(`logic.component[???].next contains '${componentKey}' that does not exsist, this item will be ignored`)\n            return false\n          })\n        })\n      } else {\n        warn(`logic.components is not an array`) \n      }\n    }\n\n    if (input.introComponents) {\n      if (Array.isArray(input.introComponents)) {\n        input.introComponents.map(name => {\n          if (conf.components[name]) {\n            conf.introComponents.push(name)\n          } else {\n            warn(`logic.introComponents['${name}'] is not a known component`) \n          }\n        })\n      } else if (typeof input.introComponents == 'string') {\n        if (conf.components[input.introComponents]) {\n          conf.introComponents.push(input.introComponents)\n        } else {\n          warn(`logic.introComponents = '${name}' is not a known component`) \n        }\n      } else {\n        warn(`logic.introComponents is not an array or string`) \n      }\n    }\n\n    this.errors = outErrs\n    this.conf = conf\n    return conf\n  }\n}\n","export default {\n  RandomString(length) {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  \n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    \n    return text;\n  }\n}\n","import utils from './utils'\n\nexport default class Tree {\n  constructor(Logic, FlowMaker) {\n    this.Logic = Logic\n    this.FlowMaker = FlowMaker\n    this.maxDepth = 0\n    this.flow = []\n    \n    this.exportBuzzy = false\n    this.reExport = false\n\n    this.exportFunc = undefined\n  }\n\n  setExportFunc(func) {\n    this.exportFunc = func\n  }\n\n  caclMaxDepth() {\n    const vm = this\n    this.maxDepth = 0\n\n    const loopOverNext = next => {\n      next.map(item => {\n        if (item.depth > vm.maxDepth) {\n          vm.maxDepth = item.depth\n        }\n        loopOverNext(item.next)\n      })\n    }\n    loopOverNext(this.flow)\n\n    this.FlowMaker.forceUpdate()\n  }\n\n  flowItem(component, lastIds, currentDepth) {\n    const id = utils.RandomString(20)\n    return {\n      depth: currentDepth + 1,\n      next: [],\n      id: id,\n      path: [...lastIds, id],\n      inputData: {},\n      inputValidation: {},\n      component,\n    }\n  }\n\n  startFlow(componentName) {\n    let component = this.Logic.conf.components[componentName]\n    if (!component) {\n      return\n    }\n\n    this.flow.push(this.flowItem(component, [], 0))\n    this.caclMaxDepth()\n    this.export()\n  }\n\n  addComponent(componentName, path) {\n    let component = this.Logic.conf.components[componentName]\n    if (!component) {\n      return\n    }\n\n    let toAppendOn = this.findPath(path)\n    toAppendOn.next.push(this.flowItem(component, toAppendOn.path, toAppendOn.depth))\n\n    this.caclMaxDepth()\n    this.export()\n  }\n\n  findPath(path) {\n    let toReturn = undefined\n    const loopOverNext = next => {\n      for (let i = 0; i < next.length; i++) {\n        if (next[i].path === path) {\n          toReturn = next[i]\n          break\n        }\n        loopOverNext(next[i].next)\n      }\n    }\n    loopOverNext(this.flow)\n    return toReturn\n  }\n\n  removeComponent(path) {\n    const loopOverNext = next => {\n      next = Object.assign([], next)\n      for (let i = 0; i < next.length; i++) {\n        if (next[i].path === path) {\n          next.splice(i, 1)\n          break\n        }\n        next[i].next = loopOverNext(next[i].next) \n      }\n      return next\n    }\n    this.flow = loopOverNext(this.flow)\n\n    this.caclMaxDepth()\n    this.export()\n  }\n\n  export() {\n    if (!this.exportBuzzy) {\n      this.exportBuzzy = true\n      \n      setTimeout(() => {\n        if (this.reExport) {\n          this.exportBuzzy = false\n          this.reExport = false\n          this.export()\n          return\n        }\n\n        let toExport = []\n      \n        const mapOverNext = (posInExpo, next) => {\n          next.map(item => {\n            let inputs = {}\n            let inputErrors = {}\n\n            Object.keys(item.inputData).map(i => {\n              inputs[i] = item.inputData[i].value\n              if (item.inputData[i].error) {\n                inputErrors[i] = item.inputData[i].error\n              }\n            })\n\n            const componentName = item.component.name\n            posInExpo.push({\n              component: {\n                title: item.component.title,\n                name: item.component.name\n              },\n              inputs,\n              inputErrors,\n              id: item.id,\n              next: [],\n            })\n            mapOverNext(posInExpo[posInExpo.length-1].next, item.next)\n          })\n        } \n\n        mapOverNext(toExport, this.flow)\n\n        if (typeof this.exportFunc == 'function') {\n          this.exportFunc(toExport)\n        }\n\n        setTimeout(() => {\n          this.exportBuzzy = false\n          if (this.reExport) {\n            this.reExport = false\n            this.export()\n          }  \n        }, 30)\n      }, 50)\n    } else {\n      this.reExport = true\n    }\n  }\n\n  import(flow) {\n    if (!Array.isArray(flow)) {\n      return\n    }\n\n    let newFlow = []\n\n    const mapOverFlow = (arr, mapTo, lastIds) => {\n      arr.map(item => {\n        let toPush = this.flowItem(this.Logic.conf.components[item.component.name], lastIds, lastIds.length)\n        \n        toPush.id = item.id\n        toPush.inputData = Object.keys(item.inputs).reduce((acc, i) => {\n          acc[i] = {\n            value: item.inputs[i],\n            error: ''\n          }\n          return acc\n        }, {})\n        toPush.path.splice(-1,1)\n        toPush.path.push(item.id)\n        mapTo.push(toPush)\n\n        mapOverFlow(item.next, mapTo[mapTo.length-1].next, [...lastIds, item.id])\n      })\n    }\n    mapOverFlow(flow, newFlow, [])\n\n    this.flow = newFlow\n    this.caclMaxDepth()\n  }\n\n  updateInputValue(path, value, field, isAdvanced) {\n    let component = this.findPath(path)\n\n    if (component) {\n      if (!isAdvanced) {\n        if (component.component.inputs && component.component.inputs[field]) {\n          const input = component.component.inputs[field]\n          component.inputData[input.name] = value\n        }\n      } else {\n        if (component.component.advancedInputs && component.component.advancedInputs[field]) {\n          const input = component.component.advancedInputs[field]\n          component.inputData[input.name] = value\n        }\n      }\n    }\n\n    this.export()\n  }\n} \n","import React from 'react'\n\nexport const Add = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\nexport const Delete = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z\"/></svg>\nexport const DropDown = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M8.71 11.71l2.59 2.59c.39.39 1.02.39 1.41 0l2.59-2.59c.63-.63.18-1.71-.71-1.71H9.41c-.89 0-1.33 1.08-.7 1.71z\"/></svg>\nexport const DropUp = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M8.71 12.29L11.3 9.7c.39-.39 1.02-.39 1.41 0l2.59 2.59c.63.63.18 1.71-.71 1.71H9.41c-.89 0-1.33-1.08-.7-1.71z\"/></svg>\nexport const Info = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 15c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1-8h-2V7h2v2z\"/></svg>\nexport const Check = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\nexport const Alert = () => <svg className=\"flow-alertIcon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"17\"></line></svg>\n","import React from 'react'\nimport {Add} from './icons'\n\nexport default class AddButton extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      open: false,\n    }\n  }\n  clickRoundButton() {\n    this.setState({\n      open: !this.state.open,\n    })\n  }\n  clickOption(option) {\n    this.props.out(option)\n    this.setState({\n      open: false\n    })\n  }\n  render() {\n    const p = this.props\n    const s = this.state\n    return (\n      <div className=\"flow-addIcon\">\n        <div className={`flow-round ${s.open ? 'flow-open' : 'flow-closed'}`} onClick={() => this.clickRoundButton()}>\n          <Add/>\n        </div>\n        <div className={`flow-options ${s.open ? 'flow-open' : 'flow-closed'}`}>\n          {p.options ? p.options.map((option, id) => \n            <div onClick={() => this.clickOption(option)} key={id} className=\"flow-option\">\n              {this.props ? this.props.Logic.title(option) : option}\n            </div>\n          ):''}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {Info} from './icons'\n\nexport default class ToolTip extends React.Component {\n  render() {\n    if (!this.props.tip) {\n      return ''\n    }\n\n    return (\n      <div className={`flow-tooltip flow-transparrent${this.props.transparrent ? 'True' : 'False'}`}>\n        <div className=\"flow-icon\">\n          <Info/>\n        </div>\n        <div className=\"flow-noWidth\">\n          <div className=\"flow-fullwidth\">\n            <div className=\"flow-popup\">\n              {this.props.tip}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {DropDown, Check} from './icons'\nimport ToolTip from './tooltip'\n\nexport default class Input extends React.Component {\n  constructor() {\n    super()\n    this.refID = \"\"\n    this.state = {\n      value: '',\n      error: '',\n      dropDownSelected: -1,\n      isAfterInit: false,\n      dropDownopen: false,\n    }\n  }\n\n  tellParent() {\n    if (this.props.onChange) {\n      this.props.onChange({\n        error: this.state.error,\n        value: this.state.value,\n      })\n    }\n  }\n\n  updateDefaultVal() {\n    if ((this.props.input && !this.state.isAfterInit) || this.refID != this.props.refID) {\n      this.refID = this.props.refID\n      const defaultInput = typeof this.props.initalVal != 'undefined' ? this.props.initalVal : this.props.input.default\n\n      this.setState({\n        value: defaultInput,\n        isAfterInit: true,\n      }, () => {\n        this.validate(defaultInput, () => {\n          if (this.props.input.type == 'dropdown' && this.state.dropDownSelected == -1) {\n            let dropDownSelected = 0\n            this.props.input.options.map((option, id) => {\n              if (option.value == defaultInput) {\n                dropDownSelected = id\n              }\n            })\n            this.setState({\n              dropDownSelected\n            })\n          }\n          this.tellParent()\n        })\n      })\n    }\n  }\n\n  validate(newVal, cb) {\n    if (typeof this.props.input.validation == 'function') {\n      let error = this.props.input.validation(undefined, newVal)\n      if (typeof error != 'string') {\n        error = ''\n      }\n      this.setState({\n        error\n      }, cb)\n    }\n    if (typeof cb == 'function') {\n      cb()\n    }\n  }\n\n  updateValue(newVal) {\n    this.setState({value: newVal}, () => {\n      this.validate(newVal, () => {\n        this.tellParent()\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.updateDefaultVal()\n  }\n\n  componentDidUpdate() {\n    this.updateDefaultVal()\n    if (this.props.hiddenDropdown && this.state.dropDownopen) {\n      this.setState({\n        dropDownopen: false,\n      })\n    }\n  }\n  \n  render() {\n    const error = this.state.error\n    const input = this.props.input\n    let inputEl\n    if (!input) {\n      return (<div className=\"flow-input\"></div>)\n    }\n\n    const Label = () => <div className=\"flow-label\" onClick={() => inputEl ? inputEl.focus() : input.type == 'switch' ? this.updateValue(!this.state.value) : ''}>\n        <span>{input.title}</span>\n        <ToolTip transparrent={true} tip={input.tooltip}/>\n      </div>\n\n    return (\n      <div className={`flow-input flow-input-type-${input.type} flow-hasErr${error ? 'True' : 'False'}`}>\n        {input.type != 'switch' ? <Label/> : ''}\n        <div className=\"flow-actualInput\">\n          {(input.type == 'text' || input.type == 'number')?\n            <div className=\"flow-text\">\n              <input ref={el => inputEl = el} type={input.type} value={this.state.value} onChange={e => this.updateValue(e.target.value)}/>\n            </div>\n          :input.type == 'switch'?\n            <div className=\"flow-switch\">\n              <div \n                onClick={() => this.updateValue(!this.state.value)} \n                className={`flow-actualSwitch ${this.state.value ? 'flow-true' : 'flow-false'}`}\n              ><div className=\"flow-inside\"><Check/></div></div>\n            </div>\n          :input.type == 'dropdown'?\n            <div className=\"flow-dropdown\">\n              <div className=\"flow-select\" onClick={() => this.setState({dropDownopen: !this.state.dropDownopen})}>\n                <div className=\"flow-optTitle\">\n                  {this.state.dropDownSelected == -1 || !input.options || input.options.length == 0\n                    ? '...' \n                    : input.options[this.state.dropDownSelected].title\n                  }\n                </div>\n                <div className=\"flow-icon\">\n                  {!input.options || input.options.length == 0 ? '' : <DropDown/>}\n                </div>\n              </div>\n              <div className={`flow-options flow-open${this.state.dropDownopen ? 'True' : 'False'}`}>\n                {input.options.map((option, optionID) => \n                  <div \n                    key={optionID} \n                    className=\"flow-option\"\n                    onClick={() => {\n                      this.updateValue(option.value)\n                      this.setState({\n                        dropDownSelected: optionID,\n                        dropDownopen: false,\n                      })\n                    }}\n                  >\n                    <div className=\"flow-optTitle\">{option.title}</div>\n                    <ToolTip tip={option.tooltip}/>\n                  </div>\n                )}\n              </div>\n            </div>\n          :''}\n        </div>\n        {input.type == 'switch' ? <Label/> : ''}\n        {error?\n          <div className=\"flow-error\">{error}</div>\n        :''}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Input from './input'\nimport {Delete, Add, DropDown, DropUp, Alert} from './icons'\nimport ToolTip from './tooltip'\n\nexport default class Block extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      hover: false,\n      showAddOptions: false,\n      showAdvanced: false,\n    }\n\n    this.remove = this.remove.bind(this)\n  }\n  remove() {\n    this.props.graphInstance.props.Tree\n    .removeComponent(this.props.graphInstance.props.data.path)\n  }\n  add() {\n\n    if (this.props.graphInstance.props.data.component.next.length == 1) {\n      this.realAdd(this.props.graphInstance.props.data.component.next[0])\n      return\n    }\n\n    this.setState({\n      showAddOptions: true,\n    })\n  }\n  realAdd(toAdd) {\n    this.setState({\n      showAddOptions: false,\n    })\n\n    if (!toAdd) {\n      return\n    }\n\n    this.props.graphInstance.props.Tree.addComponent(toAdd, this.props.graphInstance.props.data.path)\n  }\n  render() {\n    const data = this.props.graphInstance.props.data\n    if (!data) {\n      return ''\n    }\n    const comp = data.component\n    const inputs = comp.inputs\n    const advancedInputs = comp.advancedInputs\n\n    return (\n      <div \n        className={`flow-fullBlock flow-hover${this.state.hover && !this.state.showAddOptions ? 'True' : 'False'}`}\n        onMouseOver={() => {\n          if (!this.state.hover) {\n            this.setState({hover: true})\n          }\n        }}\n        onMouseOut={() => {\n          if (this.state.hover) {\n            this.setState({hover: false})\n          }\n        }}\n      >\n        <div className=\"flow-side\">\n          <div className=\"flow-innerSide\">\n            <div className=\"flow-round\" onClick={this.remove}>\n              <Delete/>\n            </div>\n          </div>\n        </div>\n        <div className=\"flow-middle\">\n          <div className=\"flow-title\">{comp.title}<ToolTip transparrent={true} tip={comp.tooltip}/></div>\n          <div className=\"flow-inputs\">\n            {\n              inputs.map((input, inputID) => {\n                const inputData = data.inputData[input.name]\n                return (\n                  <Input\n                    refID={data.id}\n                    key={inputID}\n                    input={input}\n                    initalVal={inputData ? inputData.value : undefined}\n                    onChange={inputData => {\n                      this.props.graphInstance.props.Tree\n                      .updateInputValue(data.path, inputData, inputID, false)\n                    }}\n                  />\n                )\n              })\n            }\n            {advancedInputs.length > 0 ?\n              (() => {\n                const hasErrors = advancedInputs.filter(el => (data.inputData[el.name] && el.validation ? el.validation(undefined, data.inputData[el.name].value) : true) !== true).length > 0\n                const showHasErrors = hasErrors && !this.state.showAdvanced\n                return (\n                  <div className=\"flow-showAdvanced\">\n                    <div \n                      className={`flow-button error${showHasErrors ? 'True' : 'False'}`}\n                      onClick={() => {\n                        this.setState({showAdvanced: !this.state.showAdvanced}, () => {\n                          if (this.props.graphParrentInstance) {\n                            this.props.graphParrentInstance.forceUpdate()\n                          } else if (this.props.graphInstance) {\n                            this.props.graphInstance.forceUpdate()\n                          }\n                        })\n                      }}\n                    >{showHasErrors ? <Alert/> : ''}Advanced {this.state.showAdvanced ? <DropUp/> : <DropDown/>}</div>\n                  </div>\n                )\n              })()\n            :''}\n          </div>\n          <div className={`flow-inputs flow-advancedInputs flow-show${this.state.showAdvanced ? 'True' : 'False'}`}>\n            {advancedInputs.map((input, inputID) => {\n              const inputData = data.inputData[input.name]\n              return (\n                <Input\n                  hiddenDropdown={!this.state.showAdvanced}\n                  key={inputID}\n                  input={input}\n                  initalVal={inputData ? inputData.value : undefined}\n                  onChange={inputData => {\n                    this.props.graphInstance.props.Tree\n                    .updateInputValue(data.path, inputData, inputID, true)\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n        {comp.next.length > 0 ?\n          <div className={`flow-nextOptions flow-show${this.state.showAddOptions ? 'True' : 'False'}`}>\n            <div className=\"flow-closePopup\" onClick={() => this.realAdd()}>\n              <Add/>\n            </div>\n            <div className=\"flow-pos\">\n              <div className=\"flow-optionsTitle\">Options</div>\n              {comp.next.map((componentName, key) => \n                <div \n                  onClick={() => this.realAdd({componentName})} \n                  className=\"flow-option\" \n                  key={key}\n                >{this.props ? this.props.graphInstance.props.Logic.title(componentName) : componentName}</div>\n              )}\n            </div>\n          </div>\n        :''}\n        {comp.next.length > 0 ?\n          <div className=\"flow-side\">\n            <div className=\"flow-innerSide\">\n              <div className=\"flow-round\" onClick={() => this.add()}>\n                <Add/>\n              </div>\n            </div>\n          </div>\n        :''}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Block from './block'\n\nconst GraphPartClass = class GraphPart extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      element: undefined,\n      lastParentPosition: 0,\n    }\n    \n    this.mounted = false\n  }\n\n  componentDidMount() {\n    this.mounted = true\n    this.watchParent()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  watchParent() {\n    if (this.mounted) {\n      let parentEl = this.props.connectTo\n      let parent = undefined\n      if (parentEl) {\n        parent = parentEl.getBoundingClientRect()\n        if (parent.top != this.state.lastParentPosition) {\n          this.setState({\n            lastParentPosition: parent.top\n          })\n        }\n      }\n      setTimeout(() => {\n        this.watchParent()\n      }, 800)\n    }\n  }\n\n  render() {\n    let parentLineHeight = 0\n    let parentLineToTop = 0\n    let type = ''\n\n    if (this.props.connectTo && this.state.element) {\n      let parent = this.props.connectTo.getBoundingClientRect()\n      let child = this.state.element.getBoundingClientRect()\n      let spaceBetween = (parent.y + (parent.height / 2)) - (child.y + (child.height / 2))  \n\n      if (spaceBetween == 0) {\n        parentLineHeight = 20\n        parentLineToTop = 10\n        type = 'straight'\n      } else if (spaceBetween < 0) {\n        parentLineHeight = ((-spaceBetween) + 20)\n        parentLineToTop = parentLineHeight - 10\n        type = 'bottomToTop'\n      } else {\n        parentLineHeight = spaceBetween + 20\n        parentLineToTop = 10\n        type = 'topToBottom'\n      }\n    }\n    return (\n      <div className=\"flow-graphPart\" style={{width: this.props.width}}>\n        {parentLineHeight && parentLineToTop && type ?\n          <div className=\"flow-lineToParrent\" style={{bottom: `${parentLineToTop}px`}}>\n            <svg viewBox={`0 0 80 ${parentLineHeight}`} height={`${parentLineHeight}px`} style={{minHeight: `${parentLineHeight}px`}} xmlns=\"http://www.w3.org/2000/svg\">\n              { type == 'bottomToTop' ?\n                <path\n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d={`M0,10 C70,10 30,${parentLineHeight-10} 80,${parentLineHeight-10}`}\n                />\n              : type == 'topToBottom' ?\n                <path \n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d={`M0,${parentLineHeight-10} C70,${parentLineHeight-10} 30,10 80,10`}\n                />\n              : \n                <path \n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d=\"M0,10 C70,10 30,10 80,10\"\n                />\n              }\n            </svg>\n          </div>\n        :''}\n        <div\n          ref={element => {\n            \n            let parentEl = this.props.connectTo\n            let parent = undefined\n            if (parentEl) {\n              parent = parentEl.getBoundingClientRect()\n            }\n\n            if (typeof this.state.element == 'object') {\n              if (!parent || parent.top == this.state.lastParentPosition) {\n                return\n              }\n            }\n\n            let toUpdate = {\n              element,\n            }\n\n            if (parent) {\n              toUpdate.lastParentPosition = parent.top\n            }\n\n            this.setState(toUpdate)\n          }} \n          className=\"flow-graph\" \n          style={{minWidth: this.props.itemWidth}}\n        >\n          <Block \n            graphInstance={this} \n            graphParrentInstance={this.props.connectToInstance}\n          />\n        </div>\n        <div className=\"flow-next\">\n          {this.props.data.next.map((item, i) => \n            <GraphPartClass \n              Tree={this.props.Tree} \n              Logic={this.props.Logic} \n              connectTo={this.state.element}\n              connectToInstance={this}\n              width={this.props.width - this.props.itemWidth} \n              itemWidth={this.props.itemWidth}\n              key={i} \n              data={item}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GraphPartClass\n","import React from 'react'\nimport './style.styl'\nimport Logic from './src/logic'\nimport Tree from './src/flowTree'\nimport AddButton from './src/addbutton'\nimport GraphPart from './src/graphPart'\nimport sha1 from 'js-sha1'\n\nexport default class FlowMaker extends React.Component {\n  constructor() {\n    super()\n\n    this.Logic = new Logic()\n    this.Tree = new Tree(this.Logic, this)\n\n    this.lastlogicHash = ''\n    this.state = {\n      settings: this.Logic.get(),\n    }\n  }\n\n  componentDidMount() {\n    const newHash = sha1(this.props.logic)\n    if (newHash != this.lastlogicHash) {\n      this.lastlogicHash = newHash\n      this.setState({\n        settings: this.Logic.parseNewLogic(this.props.logic)\n      }, () => this.afterMount())\n    } else {\n      this.afterMount()\n    }\n  }\n\n  afterMount() {\n    if (typeof this.props.onChange == 'function')\n      this.Tree.setExportFunc(this.props.onChange)\n    if (typeof this.props.flow == 'object')\n      this.Tree.import(this.props.flow)\n  }\n\n  render() {\n    const s = this.state.settings\n\n    return (\n      <div className=\"flowMakerComp\">\n        <div className=\"flowMakerContainer\" style={{minWidth: `${250 + (380 * this.Tree.maxDepth)}px`}}>\n          <div className=\"flow-row\" style={{minWidth: '250px'}}>\n            {s.introComponents.length > 0 ?\n              <div className=\"flow-startPoint\">\n                <h3>Start here</h3>\n                <AddButton\n                  Tree={this.Tree}\n                  Logic={this.Logic}\n                  options={s.introComponents}\n                  out={componentName => this.Tree.startFlow(componentName)}\n                />\n              </div>\n            :''}\n          </div>\n\n          <div className=\"flow-actualGraph\" style={{width: `${380 * this.Tree.maxDepth}px`}}>\n            {this.Tree.flow.map((item, i) => \n              <GraphPart\n                Tree={this.Tree} \n                Logic={this.Logic}\n                width={380 * this.Tree.maxDepth}\n                itemWidth={380} \n                key={i} \n                data={item}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":["Logic","constructor","this","conf","components","introComponents","errors","title","compoentName","get","parseNewLogic","input","outErrs","warn","data","push","join","console","log","Array","isArray","map","component","i","name","alreadyUsedNames","toInsert","next","tooltip","inputs","advancedInputs","inputID","type","validation","undefined","indexOf","toReturn","default","options","option","optionID","value","filter","item","advanced","Object","keys","key","componentKey","RandomString","length","text","possible","charAt","Math","floor","random","Tree","FlowMaker","maxDepth","flow","exportBuzzy","reExport","exportFunc","setExportFunc","func","caclMaxDepth","vm","loopOverNext","depth","forceUpdate","flowItem","lastIds","currentDepth","id","utils","path","inputData","inputValidation","startFlow","componentName","export","addComponent","toAppendOn","findPath","removeComponent","assign","splice","setTimeout","toExport","mapOverNext","posInExpo","inputErrors","error","import","newFlow","mapOverFlow","arr","mapTo","toPush","reduce","acc","updateInputValue","field","isAdvanced","Add","React","xmlns","width","height","viewBox","d","fill","Delete","DropDown","DropUp","Info","Check","Alert","className","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","AddButton","Component","super","state","open","clickRoundButton","setState","clickOption","props","out","render","p","s","onClick","ToolTip","tip","transparrent","Input","refID","dropDownSelected","isAfterInit","dropDownopen","tellParent","onChange","updateDefaultVal","defaultInput","initalVal","validate","newVal","cb","updateValue","componentDidMount","componentDidUpdate","hiddenDropdown","inputEl","Label","focus","ref","el","e","target","Block","hover","showAddOptions","showAdvanced","remove","bind","graphInstance","add","realAdd","toAdd","comp","onMouseOver","onMouseOut","showHasErrors","graphParrentInstance","GraphPartClass","element","lastParentPosition","mounted","watchParent","componentWillUnmount","parent","parentEl","connectTo","getBoundingClientRect","top","parentLineHeight","parentLineToTop","child","spaceBetween","y","style","bottom","minHeight","toUpdate","minWidth","itemWidth","connectToInstance","lastlogicHash","settings","newHash","sha1","logic","afterMount","GraphPart"],"mappings":"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"}