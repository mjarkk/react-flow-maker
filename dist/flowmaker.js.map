{"version":3,"file":"flowmaker.js","sources":["../src/logic.js","../src/flowTree.js","../src/utils.js","../src/icons.js","../src/addbutton.js","../src/tooltip.js","../src/input.js","../src/block.js","../src/graphPart.js","../flowmaker.js"],"sourcesContent":["export default class Logic {\n  constructor() {\n    this.conf = {\n      components: {},\n      introComponents: [],\n    }\n    this.errors = []\n  }\n  title(compoentName) {\n    return this.conf.components[compoentName].title\n  }\n  get() {\n    return this.conf\n  }\n  parseNewLogic(input) {\n    const outErrs = []\n    const warn = (...data) => {\n      outErrs.push(data.join(' '))\n      console.log(\"logic parse warning:\", ...data)\n    }\n\n    let conf = {\n      components: {},\n      introComponents: [],\n    }\n\n    if (input.components) {\n      if (Array.isArray(input.components)) {\n        input.components.map((component, i) => {\n          if (!component.name || !component.title) {\n            warn(`logic.components[${i}] does not have a name or title field, this component will be ignored`)\n            return\n          }\n          \n          const alreadyUsedNames = []\n\n          let toInsert = {\n            name: component.name,\n            title: component.title,\n            next: component.next ? Array.isArray(component.next) ? component.next : [component.next] : [],\n            tooltip: component.tooltip,\n            inputs: [],\n            advancedInputs: [],\n          }\n\n          if (Array.isArray(component.inputs)) {\n            component.inputs.map((input, inputID) => {\n              if (!input.title || !input.name || !input.type) {\n                warn(`logic.components[${i}].inputs[${inputID}] does not have a name, type or title field, this input will be ignored`)\n                return\n              }\n\n              if (typeof input.validation != 'function' && typeof input.validation != 'undefined') {\n                warn(`logic.components[${i}].inputs[${inputID}].validation must be undefined or a function`)\n                return\n              }\n              \n              if (typeof input.tooltip != 'string' && input.tooltip !== undefined) {\n                warn(`logic.components[${i}].inputs[${inputID}].tooltip must be a string or not undefined`)\n                return\n              }\n\n              if (alreadyUsedNames.indexOf(input.name) != -1) {\n                warn(`logic.components[${i}].inputs[${inputID}].name can't be equal to other names`)\n                return\n              }\n\n              let toReturn = {\n                name: input.name,\n                title: input.title,\n                type: input.type,\n                validation: input.validation,\n                tooltip: input.tooltip,\n                default: input.default,\n              }\n\n              switch (input.type) {\n                case 'text':\n                  if (typeof input.default != 'string' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a string or undefined, using default empty string`)\n                    toReturn.default = ''\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = ''\n                  }\n                  break;\n                case 'number':\n                  if (typeof input.default != 'number' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a number or undefined, using default 0`)\n                    toReturn.default = 0\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = 0\n                  }\n                  break;\n                case 'switch':\n                  if (typeof input.default != 'boolean' && input.default !== undefined) {\n                    warn(`logic.components[${i}].inputs[${inputID}].default must be a boolean or undefined, using default empty string`)\n                    toReturn.default = false\n                  }\n                  if (input.default == undefined) {\n                    toReturn.default = false\n                  }\n                  break;\n                case 'dropdown':\n                  if (!Array.isArray(input.options)) {\n                    warn(`logic.components[${i}].inputs[${inputID}].options is not defined or is not an array, skipping this item`)\n                    return\n                  } else {\n                    toReturn['options'] = input.options.map((option, optionID) => {\n                      if (typeof option.title != 'string' || typeof option.value != 'string' || (typeof option.tooltip != 'string' && option.tooltip != undefined)) {\n                        warn(`logic.components[${i}].inputs[${inputID}].options[${optionID}] does not have the correct items (title string, value string, tooltip string), skipping this item`)\n                        return\n                      }\n                      return {\n                        title: option.title,\n                        tooltip: option.tooltip,\n                        value: option.value,\n                      }\n                    }).filter(item => item)\n                  }\n                  break;\n                default:\n                  warn(`logic.components[${i}].inputs[${inputID}].type = '${input.type}' is not valid, this input will be ignored`)\n                  return\n              }\n\n              alreadyUsedNames.push(input.name)\n              toInsert[input.advanced ? 'advancedInputs' : 'inputs'].push(toReturn)\n              return\n            })\n          }\n\n          conf.components[component.name] = toInsert\n        })\n        Object.keys(conf.components).map(key => {\n          conf.components[key].next = conf.components[key].next.filter(componentKey => {\n            if (conf.components[componentKey]) {\n              return true\n            }\n            warn(`logic.component[???].next contains '${componentKey}' that does not exsist, this item will be ignored`)\n            return false\n          })\n        })\n      } else {\n        warn(`logic.components is not an array`) \n      }\n    }\n\n    if (input.introComponents) {\n      if (Array.isArray(input.introComponents)) {\n        input.introComponents.map(name => {\n          if (conf.components[name]) {\n            conf.introComponents.push(name)\n          } else {\n            warn(`logic.introComponents['${name}'] is not a known component`) \n          }\n        })\n      } else if (typeof input.introComponents == 'string') {\n        if (conf.components[input.introComponents]) {\n          conf.introComponents.push(input.introComponents)\n        } else {\n          warn(`logic.introComponents = '${name}' is not a known component`) \n        }\n      } else {\n        warn(`logic.introComponents is not an array or string`) \n      }\n    }\n\n    this.errors = outErrs\n    this.conf = conf\n    return conf\n  }\n}\n","import utils from './utils'\n\nexport default class Tree {\n  constructor(Logic, FlowMaker) {\n    this.Logic = Logic\n    this.FlowMaker = FlowMaker\n    this.maxDepth = 0\n    this.flow = []\n    \n    this.exportBuzzy = false\n    this.reExport = false\n\n    this.exportFunc = undefined\n  }\n\n  setExportFunc(func) {\n    this.exportFunc = func\n  }\n\n  caclMaxDepth() {\n    const vm = this\n    this.maxDepth = 0\n\n    const loopOverNext = next => {\n      next.map(item => {\n        if (item.depth > vm.maxDepth) {\n          vm.maxDepth = item.depth\n        }\n        loopOverNext(item.next)\n      })\n    }\n    loopOverNext(this.flow)\n\n    this.FlowMaker.forceUpdate()\n  }\n\n  flowItem(component, lastIds, currentDepth) {\n    const id = utils.RandomString(20)\n    return {\n      depth: currentDepth + 1,\n      next: [],\n      id: id,\n      path: [...lastIds, id],\n      inputData: {},\n      inputValidation: {},\n      component,\n    }\n  }\n\n  startFlow(componentName) {\n    let component = this.Logic.conf.components[componentName]\n    if (!component) {\n      return\n    }\n\n    this.flow.push(this.flowItem(component, [], 0))\n    this.caclMaxDepth()\n    this.export()\n  }\n\n  addComponent(componentName, path) {\n    let component = this.Logic.conf.components[componentName]\n    if (!component) {\n      return\n    }\n\n    let toAppendOn = this.findPath(path)\n    toAppendOn.next.push(this.flowItem(component, toAppendOn.path, toAppendOn.depth))\n\n    this.caclMaxDepth()\n    this.export()\n  }\n\n  findPath(path) {\n    let toReturn = undefined\n    const loopOverNext = next => {\n      for (let i = 0; i < next.length; i++) {\n        if (next[i].path === path) {\n          toReturn = next[i]\n          break\n        }\n        loopOverNext(next[i].next)\n      }\n    }\n    loopOverNext(this.flow)\n    return toReturn\n  }\n\n  removeComponent(path) {\n    const loopOverNext = next => {\n      next = Object.assign([], next)\n      for (let i = 0; i < next.length; i++) {\n        if (next[i].path === path) {\n          next.splice(i, 1)\n          break\n        }\n        next[i].next = loopOverNext(next[i].next) \n      }\n      return next\n    }\n    this.flow = loopOverNext(this.flow)\n\n    this.caclMaxDepth()\n    this.export()\n  }\n\n  export() {\n    if (!this.exportBuzzy) {\n      this.exportBuzzy = true\n      \n      setTimeout(() => {\n        if (this.reExport) {\n          this.exportBuzzy = false\n          this.reExport = false\n          this.export()\n          return\n        }\n\n        let toExport = []\n      \n        const mapOverNext = (posInExpo, next) => {\n          next.map(item => {\n            let inputs = {}\n            let inputErrors = {}\n\n            Object.keys(item.inputData).map(i => {\n              inputs[i] = item.inputData[i].value\n              if (item.inputData[i].error) {\n                inputErrors[i] = item.inputData[i].error\n              }\n            })\n\n            const componentName = item.component.name\n            posInExpo.push({\n              component: {\n                title: item.component.title,\n                name: item.component.name\n              },\n              inputs,\n              inputErrors,\n              id: item.id,\n              next: [],\n            })\n            mapOverNext(posInExpo[posInExpo.length-1].next, item.next)\n          })\n        } \n\n        mapOverNext(toExport, this.flow)\n\n        if (typeof this.exportFunc == 'function') {\n          this.exportFunc(toExport)\n        }\n\n        setTimeout(() => {\n          this.exportBuzzy = false\n          if (this.reExport) {\n            this.reExport = false\n            this.export()\n          }  \n        }, 30)\n      }, 50)\n    } else {\n      this.reExport = true\n    }\n  }\n\n  import(flow) {\n    if (!Array.isArray(flow)) {\n      return\n    }\n\n    let newFlow = []\n\n    const mapOverFlow = (arr, mapTo, lastIds) => {\n      arr.map(item => {\n        let toPush = this.flowItem(this.Logic.conf.components[item.component.name], lastIds, lastIds.length)\n        \n        toPush.id = item.id\n        toPush.inputData = Object.keys(item.inputs).reduce((acc, i) => {\n          acc[i] = {\n            value: item.inputs[i],\n            error: ''\n          }\n          return acc\n        }, {})\n        toPush.path.splice(-1,1)\n        toPush.path.push(item.id)\n        mapTo.push(toPush)\n\n        mapOverFlow(item.next, mapTo[mapTo.length-1].next, [...lastIds, item.id])\n      })\n    }\n    mapOverFlow(flow, newFlow, [])\n\n    this.flow = newFlow\n    this.caclMaxDepth()\n  }\n\n  updateInputValue(path, value, field, isAdvanced) {\n    let component = this.findPath(path)\n\n    if (component) {\n      if (!isAdvanced) {\n        if (component.component.inputs && component.component.inputs[field]) {\n          const input = component.component.inputs[field]\n          component.inputData[input.name] = value\n        }\n      } else {\n        if (component.component.advancedInputs && component.component.advancedInputs[field]) {\n          const input = component.component.advancedInputs[field]\n          component.inputData[input.name] = value\n        }\n      }\n    }\n\n    this.export()\n  }\n} \n","export default {\n  RandomString(length) {\n    let text = \"\";\n    const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  \n    for (let i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    \n    return text;\n  }\n}\n","import React from 'react'\n\nexport const Add = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>\nexport const Delete = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2H8c-1.1 0-2 .9-2 2v10zM18 4h-2.5l-.71-.71c-.18-.18-.44-.29-.7-.29H9.91c-.26 0-.52.11-.7.29L8.5 4H6c-.55 0-1 .45-1 1s.45 1 1 1h12c.55 0 1-.45 1-1s-.45-1-1-1z\"/></svg>\nexport const DropDown = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M8.71 11.71l2.59 2.59c.39.39 1.02.39 1.41 0l2.59-2.59c.63-.63.18-1.71-.71-1.71H9.41c-.89 0-1.33 1.08-.7 1.71z\"/></svg>\nexport const DropUp = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M8.71 12.29L11.3 9.7c.39-.39 1.02-.39 1.41 0l2.59 2.59c.63.63.18 1.71-.71 1.71H9.41c-.89 0-1.33-1.08-.7-1.71z\"/></svg>\nexport const Info = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\"><path fill=\"none\" d=\"M0 0h24v24H0V0z\"/><path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 15c-.55 0-1-.45-1-1v-4c0-.55.45-1 1-1s1 .45 1 1v4c0 .55-.45 1-1 1zm1-8h-2V7h2v2z\"/></svg>\nexport const Check = () => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"/></svg>\nexport const Alert = () => <svg className=\"flow-alertIcon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"><path d=\"M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z\"></path><line x1=\"12\" y1=\"9\" x2=\"12\" y2=\"13\"></line><line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"17\"></line></svg>\n","import React from 'react'\nimport {Add} from './icons'\n\nexport default class AddButton extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      open: false,\n    }\n  }\n  clickRoundButton() {\n    this.setState({\n      open: !this.state.open,\n    })\n  }\n  clickOption(option) {\n    this.props.out(option)\n    this.setState({\n      open: false\n    })\n  }\n  render() {\n    const p = this.props\n    const s = this.state\n    return (\n      <div className=\"flow-addIcon\">\n        <div className={`flow-round ${s.open ? 'flow-open' : 'flow-closed'}`} onClick={() => this.clickRoundButton()}>\n          <Add/>\n        </div>\n        <div className={`flow-options ${s.open ? 'flow-open' : 'flow-closed'}`}>\n          {p.options ? p.options.map((option, id) => \n            <div onClick={() => this.clickOption(option)} key={id} className=\"flow-option\">\n              {this.props ? this.props.Logic.title(option) : option}\n            </div>\n          ):''}\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {Info} from './icons'\n\nexport default class ToolTip extends React.Component {\n  render() {\n    if (!this.props.tip) {\n      return ''\n    }\n\n    return (\n      <div className={`flow-tooltip flow-transparrent${this.props.transparrent ? 'True' : 'False'}`}>\n        <div className=\"flow-icon\">\n          <Info/>\n        </div>\n        <div className=\"flow-noWidth\">\n          <div className=\"flow-fullwidth\">\n            <div className=\"flow-popup\">\n              {this.props.tip}\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport {DropDown, Check} from './icons'\nimport ToolTip from './tooltip'\n\nexport default class Input extends React.Component {\n  constructor() {\n    super()\n    this.refID = \"\"\n    this.state = {\n      value: '',\n      error: '',\n      dropDownSelected: -1,\n      isAfterInit: false,\n      dropDownopen: false,\n    }\n  }\n\n  tellParent() {\n    if (this.props.onChange) {\n      this.props.onChange({\n        error: this.state.error,\n        value: this.state.value,\n      })\n    }\n  }\n\n  updateDefaultVal() {\n    if ((this.props.input && !this.state.isAfterInit) || this.refID != this.props.refID) {\n      this.refID = this.props.refID\n      const defaultInput = typeof this.props.initalVal != 'undefined' ? this.props.initalVal : this.props.input.default\n\n      this.setState({\n        value: defaultInput,\n        isAfterInit: true,\n      }, () => {\n        this.validate(defaultInput, () => {\n          if (this.props.input.type == 'dropdown' && this.state.dropDownSelected == -1) {\n            let dropDownSelected = 0\n            this.props.input.options.map((option, id) => {\n              if (option.value == defaultInput) {\n                dropDownSelected = id\n              }\n            })\n            this.setState({\n              dropDownSelected\n            })\n          }\n          this.tellParent()\n        })\n      })\n    }\n  }\n\n  validate(newVal, cb) {\n    if (typeof this.props.input.validation == 'function') {\n      let error = this.props.input.validation(undefined, newVal)\n      if (typeof error != 'string') {\n        error = ''\n      }\n      this.setState({\n        error\n      }, cb)\n    }\n    if (typeof cb == 'function') {\n      cb()\n    }\n  }\n\n  updateValue(newVal) {\n    this.setState({value: newVal}, () => {\n      this.validate(newVal, () => {\n        this.tellParent()\n      })\n    })\n  }\n\n  componentDidMount() {\n    this.updateDefaultVal()\n  }\n\n  componentDidUpdate() {\n    this.updateDefaultVal()\n    if (this.props.hiddenDropdown && this.state.dropDownopen) {\n      this.setState({\n        dropDownopen: false,\n      })\n    }\n  }\n  \n  render() {\n    const error = this.state.error\n    const input = this.props.input\n    let inputEl\n    if (!input) {\n      return (<div className=\"flow-input\"></div>)\n    }\n\n    const Label = () => <div className=\"flow-label\" onClick={() => inputEl ? inputEl.focus() : input.type == 'switch' ? this.updateValue(!this.state.value) : ''}>\n        <span>{input.title}</span>\n        <ToolTip transparrent={true} tip={input.tooltip}/>\n      </div>\n\n    return (\n      <div className={`flow-input flow-input-type-${input.type} flow-hasErr${error ? 'True' : 'False'}`}>\n        {input.type != 'switch' ? <Label/> : ''}\n        <div className=\"flow-actualInput\">\n          {(input.type == 'text' || input.type == 'number')?\n            <div className=\"flow-text\">\n              <input ref={el => inputEl = el} type={input.type} value={this.state.value} onChange={e => this.updateValue(e.target.value)}/>\n            </div>\n          :input.type == 'switch'?\n            <div className=\"flow-switch\">\n              <div \n                onClick={() => this.updateValue(!this.state.value)} \n                className={`flow-actualSwitch ${this.state.value ? 'flow-true' : 'flow-false'}`}\n              ><div className=\"flow-inside\"><Check/></div></div>\n            </div>\n          :input.type == 'dropdown'?\n            <div className=\"flow-dropdown\">\n              <div className=\"flow-select\" onClick={() => this.setState({dropDownopen: !this.state.dropDownopen})}>\n                <div className=\"flow-optTitle\">\n                  {this.state.dropDownSelected == -1 || !input.options || input.options.length == 0\n                    ? '...' \n                    : input.options[this.state.dropDownSelected].title\n                  }\n                </div>\n                <div className=\"flow-icon\">\n                  {!input.options || input.options.length == 0 ? '' : <DropDown/>}\n                </div>\n              </div>\n              <div className={`flow-options flow-open${this.state.dropDownopen ? 'True' : 'False'}`}>\n                {input.options.map((option, optionID) => \n                  <div \n                    key={optionID} \n                    className=\"flow-option\"\n                    onClick={() => {\n                      this.updateValue(option.value)\n                      this.setState({\n                        dropDownSelected: optionID,\n                        dropDownopen: false,\n                      })\n                    }}\n                  >\n                    <div className=\"flow-optTitle\">{option.title}</div>\n                    <ToolTip tip={option.tooltip}/>\n                  </div>\n                )}\n              </div>\n            </div>\n          :''}\n        </div>\n        {input.type == 'switch' ? <Label/> : ''}\n        {error?\n          <div className=\"flow-error\">{error}</div>\n        :''}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Input from './input'\nimport {Delete, Add, DropDown, DropUp, Alert} from './icons'\nimport ToolTip from './tooltip'\n\nexport default class Block extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      hover: false,\n      showAddOptions: false,\n      showAdvanced: false,\n    }\n\n    this.remove = this.remove.bind(this)\n  }\n  remove() {\n    this.props.graphInstance.props.Tree\n    .removeComponent(this.props.graphInstance.props.data.path)\n  }\n  add() {\n\n    if (this.props.graphInstance.props.data.component.next.length == 1) {\n      this.realAdd(this.props.graphInstance.props.data.component.next[0])\n      return\n    }\n\n    this.setState({\n      showAddOptions: true,\n    })\n  }\n  realAdd(toAdd) {\n    this.setState({\n      showAddOptions: false,\n    })\n\n    if (!toAdd) {\n      return\n    }\n\n    this.props.graphInstance.props.Tree.addComponent(toAdd, this.props.graphInstance.props.data.path)\n  }\n  render() {\n    const data = this.props.graphInstance.props.data\n    if (!data) {\n      return ''\n    }\n    const comp = data.component\n    const inputs = comp.inputs\n    const advancedInputs = comp.advancedInputs\n\n    return (\n      <div \n        className={`flow-fullBlock flow-hover${this.state.hover && !this.state.showAddOptions ? 'True' : 'False'}`}\n        onMouseOver={() => {\n          if (!this.state.hover) {\n            this.setState({hover: true})\n          }\n        }}\n        onMouseOut={() => {\n          if (this.state.hover) {\n            this.setState({hover: false})\n          }\n        }}\n      >\n        <div className=\"flow-side\">\n          <div className=\"flow-innerSide\">\n            <div className=\"flow-round\" onClick={this.remove}>\n              <Delete/>\n            </div>\n          </div>\n        </div>\n        <div className=\"flow-middle\">\n          <div className=\"flow-title\">{comp.title}<ToolTip transparrent={true} tip={comp.tooltip}/></div>\n          <div className=\"flow-inputs\">\n            {\n              inputs.map((input, inputID) => {\n                const inputData = data.inputData[input.name]\n                return (\n                  <Input\n                    refID={data.id}\n                    key={inputID}\n                    input={input}\n                    initalVal={inputData ? inputData.value : undefined}\n                    onChange={inputData => {\n                      this.props.graphInstance.props.Tree\n                      .updateInputValue(data.path, inputData, inputID, false)\n                    }}\n                  />\n                )\n              })\n            }\n            {advancedInputs.length > 0 ?\n              (() => {\n                const hasErrors = advancedInputs.filter(el => (data.inputData[el.name] && el.validation ? el.validation(undefined, data.inputData[el.name].value) : true) !== true).length > 0\n                const showHasErrors = hasErrors && !this.state.showAdvanced\n                return (\n                  <div className=\"flow-showAdvanced\">\n                    <div \n                      className={`flow-button error${showHasErrors ? 'True' : 'False'}`}\n                      onClick={() => {\n                        this.setState({showAdvanced: !this.state.showAdvanced}, () => {\n                          if (this.props.graphParrentInstance) {\n                            this.props.graphParrentInstance.forceUpdate()\n                          } else if (this.props.graphInstance) {\n                            this.props.graphInstance.forceUpdate()\n                          }\n                        })\n                      }}\n                    >{showHasErrors ? <Alert/> : ''}Advanced {this.state.showAdvanced ? <DropUp/> : <DropDown/>}</div>\n                  </div>\n                )\n              })()\n            :''}\n          </div>\n          <div className={`flow-inputs flow-advancedInputs flow-show${this.state.showAdvanced ? 'True' : 'False'}`}>\n            {advancedInputs.map((input, inputID) => {\n              const inputData = data.inputData[input.name]\n              return (\n                <Input\n                  hiddenDropdown={!this.state.showAdvanced}\n                  key={inputID}\n                  input={input}\n                  initalVal={inputData ? inputData.value : undefined}\n                  onChange={inputData => {\n                    this.props.graphInstance.props.Tree\n                    .updateInputValue(data.path, inputData, inputID, true)\n                  }}\n                />\n              )\n            })}\n          </div>\n        </div>\n        {comp.next.length > 0 ?\n          <div className={`flow-nextOptions flow-show${this.state.showAddOptions ? 'True' : 'False'}`}>\n            <div className=\"flow-closePopup\" onClick={() => this.realAdd()}>\n              <Add/>\n            </div>\n            <div className=\"flow-pos\">\n              <div className=\"flow-optionsTitle\">Options</div>\n              {comp.next.map((componentName, key) => \n                <div \n                  onClick={() => this.realAdd({componentName})} \n                  className=\"flow-option\" \n                  key={key}\n                >{this.props ? this.props.graphInstance.props.Logic.title(componentName) : componentName}</div>\n              )}\n            </div>\n          </div>\n        :''}\n        {comp.next.length > 0 ?\n          <div className=\"flow-side\">\n            <div className=\"flow-innerSide\">\n              <div className=\"flow-round\" onClick={() => this.add()}>\n                <Add/>\n              </div>\n            </div>\n          </div>\n        :''}\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport Block from './block'\n\nconst GraphPartClass = class GraphPart extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      element: undefined,\n      lastParentPosition: 0,\n    }\n    \n    this.mounted = false\n  }\n\n  componentDidMount() {\n    this.mounted = true\n    this.watchParent()\n  }\n\n  componentWillUnmount() {\n    this.mounted = false\n  }\n\n  watchParent() {\n    if (this.mounted) {\n      let parentEl = this.props.connectTo\n      let parent = undefined\n      if (parentEl) {\n        parent = parentEl.getBoundingClientRect()\n        if (parent.top != this.state.lastParentPosition) {\n          this.setState({\n            lastParentPosition: parent.top\n          })\n        }\n      }\n      setTimeout(() => {\n        this.watchParent()\n      }, 800)\n    }\n  }\n\n  render() {\n    let parentLineHeight = 0\n    let parentLineToTop = 0\n    let type = ''\n\n    if (this.props.connectTo && this.state.element) {\n      let parent = this.props.connectTo.getBoundingClientRect()\n      let child = this.state.element.getBoundingClientRect()\n      let spaceBetween = (parent.y + (parent.height / 2)) - (child.y + (child.height / 2))  \n\n      if (spaceBetween == 0) {\n        parentLineHeight = 20\n        parentLineToTop = 10\n        type = 'straight'\n      } else if (spaceBetween < 0) {\n        parentLineHeight = ((-spaceBetween) + 20)\n        parentLineToTop = parentLineHeight - 10\n        type = 'bottomToTop'\n      } else {\n        parentLineHeight = spaceBetween + 20\n        parentLineToTop = 10\n        type = 'topToBottom'\n      }\n    }\n    return (\n      <div className=\"flow-graphPart\" style={{width: this.props.width}}>\n        {parentLineHeight && parentLineToTop && type ?\n          <div className=\"flow-lineToParrent\" style={{bottom: `${parentLineToTop}px`}}>\n            <svg viewBox={`0 0 80 ${parentLineHeight}`} height={`${parentLineHeight}px`} style={{minHeight: `${parentLineHeight}px`}} xmlns=\"http://www.w3.org/2000/svg\">\n              { type == 'bottomToTop' ?\n                <path\n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d={`M0,10 C70,10 30,${parentLineHeight-10} 80,${parentLineHeight-10}`}\n                />\n              : type == 'topToBottom' ?\n                <path \n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d={`M0,${parentLineHeight-10} C70,${parentLineHeight-10} 30,10 80,10`}\n                />\n              : \n                <path \n                  strokeWidth=\"7\" \n                  stroke=\"#ccc\" \n                  strokeLinecap=\"round\" \n                  fill=\"none\" \n                  d=\"M0,10 C70,10 30,10 80,10\"\n                />\n              }\n            </svg>\n          </div>\n        :''}\n        <div\n          ref={element => {\n            \n            let parentEl = this.props.connectTo\n            let parent = undefined\n            if (parentEl) {\n              parent = parentEl.getBoundingClientRect()\n            }\n\n            if (typeof this.state.element == 'object') {\n              if (!parent || parent.top == this.state.lastParentPosition) {\n                return\n              }\n            }\n\n            let toUpdate = {\n              element,\n            }\n\n            if (parent) {\n              toUpdate.lastParentPosition = parent.top\n            }\n\n            this.setState(toUpdate)\n          }} \n          className=\"flow-graph\" \n          style={{minWidth: this.props.itemWidth}}\n        >\n          <Block \n            graphInstance={this} \n            graphParrentInstance={this.props.connectToInstance}\n          />\n        </div>\n        <div className=\"flow-next\">\n          {this.props.data.next.map((item, i) => \n            <GraphPartClass \n              Tree={this.props.Tree} \n              Logic={this.props.Logic} \n              connectTo={this.state.element}\n              connectToInstance={this}\n              width={this.props.width - this.props.itemWidth} \n              itemWidth={this.props.itemWidth}\n              key={i} \n              data={item}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GraphPartClass\n","import React from 'react'\nimport './style.styl'\nimport Logic from './src/logic'\nimport Tree from './src/flowTree'\nimport AddButton from './src/addbutton'\nimport GraphPart from './src/graphPart'\nimport sha1 from 'js-sha1'\n\nexport default class FlowMaker extends React.Component {\n  constructor() {\n    super()\n\n    this.Logic = new Logic()\n    this.Tree = new Tree(this.Logic, this)\n\n    this.lastlogicHash = ''\n    this.state = {\n      settings: this.Logic.get(),\n    }\n  }\n\n  componentDidMount() {\n    const newHash = sha1(this.props.logic)\n    if (newHash != this.lastlogicHash) {\n      this.lastlogicHash = newHash\n      this.setState({\n        settings: this.Logic.parseNewLogic(this.props.logic)\n      }, () => this.afterMount())\n    } else {\n      this.afterMount()\n    }\n  }\n\n  afterMount() {\n    if (typeof this.props.onChange == 'function')\n      this.Tree.setExportFunc(this.props.onChange)\n    if (typeof this.props.flow == 'object')\n      this.Tree.import(this.props.flow)\n  }\n\n  render() {\n    const s = this.state.settings\n\n    return (\n      <div className=\"flowMakerComp\">\n        <div className=\"flowMakerContainer\" style={{minWidth: `${250 + (380 * this.Tree.maxDepth)}px`}}>\n          <div className=\"flow-row\" style={{minWidth: '250px'}}>\n            {s.introComponents.length > 0 ?\n              <div className=\"flow-startPoint\">\n                <h3>Start here</h3>\n                <AddButton\n                  Tree={this.Tree}\n                  Logic={this.Logic}\n                  options={s.introComponents}\n                  out={componentName => this.Tree.startFlow(componentName)}\n                />\n              </div>\n            :''}\n          </div>\n\n          <div className=\"flow-actualGraph\" style={{width: `${380 * this.Tree.maxDepth}px`}}>\n            {this.Tree.flow.map((item, i) => \n              <GraphPart\n                Tree={this.Tree} \n                Logic={this.Logic}\n                width={380 * this.Tree.maxDepth}\n                itemWidth={380} \n                key={i} \n                data={item}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"names":["Logic","this","conf","components","introComponents","errors","title","compoentName","get","parseNewLogic","input","outErrs","warn","data","push","join","console","log","Array","isArray","map","component","i","name","alreadyUsedNames","toInsert","next","tooltip","inputs","advancedInputs","inputID","type","validation","undefined","indexOf","toReturn","default","options","option","optionID","value","filter","item","advanced","Object","keys","key","componentKey","Tree","FlowMaker","maxDepth","flow","exportBuzzy","reExport","exportFunc","setExportFunc","func","caclMaxDepth","vm","loopOverNext","depth","forceUpdate","flowItem","lastIds","currentDepth","id","length","text","possible","charAt","Math","floor","random","utils","path","inputData","inputValidation","startFlow","componentName","addComponent","toAppendOn","findPath","removeComponent","assign","splice","setTimeout","_this","toExport","mapOverNext","posInExpo","inputErrors","error","newFlow","mapOverFlow","arr","mapTo","toPush","_this2","reduce","acc","updateInputValue","field","isAdvanced","Add","React","xmlns","width","height","viewBox","d","fill","Delete","DropDown","DropUp","Info","Check","Alert","className","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x1","y1","x2","y2","AddButton","state","open","clickRoundButton","setState","clickOption","props","out","render","p","s","onClick","Component","ToolTip","tip","transparrent","Input","refID","dropDownSelected","isAfterInit","dropDownopen","tellParent","onChange","updateDefaultVal","defaultInput","initalVal","validate","newVal","cb","updateValue","_this3","componentDidMount","componentDidUpdate","hiddenDropdown","inputEl","Label","focus","_this4","ref","el","e","target","Block","hover","showAddOptions","showAdvanced","remove","bind","graphInstance","add","realAdd","toAdd","showHasErrors","comp","onMouseOver","onMouseOut","graphParrentInstance","GraphPartClass","element","lastParentPosition","mounted","watchParent","componentWillUnmount","parentEl","connectTo","parent","getBoundingClientRect","top","parentLineHeight","parentLineToTop","child","spaceBetween","y","style","bottom","minHeight","toUpdate","minWidth","itemWidth","connectToInstance","lastlogicHash","settings","newHash","sha1","logic","afterMount","GraphPart"],"mappings":"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"}